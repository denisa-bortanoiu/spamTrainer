{"remainingRequest":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/denisa/PycharmProjects/spamTrainer/classification-interface/src/components/Classify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/src/components/Classify.vue","mtime":1546602673923},{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nexport default {\n  name: \"TrainFiles\",\n  props: {\n    endpoint: String,\n    color: String\n  },\n  data(){\n    return {\n      files: [],\n        showSuccess: false,\n        showFailure: false\n    }\n  },\n  methods: {\n    clearFiles() {\n      this.$refs.endpoint.reset();\n    },\n    send_files() {\n      let self = this;\n      let formData = new FormData();\n      for(let i = 0; i < this.files.length; i++) {\n        let file = this.files[i];\n        formData.append('files[' + i + ']', file);\n      }\n\n      axios.post('http://localhost:5001/' + this.endpoint,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      ).then(function(){\n        self.showSuccess = true;\n      })\n      .catch(function(){\n        self.showFailure = true;\n      });\n\n    }\n  }\n}\n",{"version":3,"sources":["Classify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Classify.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-col>\n    <h2>Classify your email</h2>\n    <b-alert variant=\"success\"\n             dismissible\n             :show=\"showSuccess\"\n             @dismissed=\"showSuccess=false\">\n      The upload was successful!\n    </b-alert>\n    <b-alert variant=\"danger\"\n             dismissible\n             :show=\"showFailure\"\n             @dismissed=\"showFailure=false\">\n      The upload has failed!\n    </b-alert>\n    <b-form-file v-model=\"file\"\n                 ref=\"endpoint\"\n                 accept=\"message/rfc822\"\n                 drag-drop type=\"is-dark\"\n                 placeholder=\"Choose files...\">\n\n    </b-form-file>\n    <div v-if=\"files.length > 0\" class=\"float-left\">\n      <div class=\"mt-3\">\n        <h5>Selected files: </h5>\n      </div>\n      <b-list-group v-for=\"file in files\" v-bind:data=\"file\" v-bind:key=\"file.name\">\n        <b-list-group-item>{{ file.name }}</b-list-group-item>\n      </b-list-group>\n    </div>\n    <div class=\"display-1\">\n      <b-button @click=\"clearFiles()\" variant=\"outline-danger\" class=\"buttons\">\n        Clear all\n      </b-button>\n      <b-button @click=\"send_files()\" variant=\"outline-success\" class=\"buttons\">\n        Train!\n      </b-button>\n    </div>\n  </b-col>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"TrainFiles\",\n  props: {\n    endpoint: String,\n    color: String\n  },\n  data(){\n    return {\n      files: [],\n        showSuccess: false,\n        showFailure: false\n    }\n  },\n  methods: {\n    clearFiles() {\n      this.$refs.endpoint.reset();\n    },\n    send_files() {\n      let self = this;\n      let formData = new FormData();\n      for(let i = 0; i < this.files.length; i++) {\n        let file = this.files[i];\n        formData.append('files[' + i + ']', file);\n      }\n\n      axios.post('http://localhost:5001/' + this.endpoint,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      ).then(function(){\n        self.showSuccess = true;\n      })\n      .catch(function(){\n        self.showFailure = true;\n      });\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n.buttons {\n  margin: 10px;\n}\n  h1 {\n    margin-bottom: 40px;\n  }\n\n</style>\n"]}]}