{"remainingRequest":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/denisa/PycharmProjects/spamTrainer/classification-interface/src/components/Classify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/src/components/Classify.vue","mtime":1546608548677},{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/denisa/PycharmProjects/spamTrainer/classification-interface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nexport default {\n  name: \"TrainFiles\",\n  props: {\n    endpoint: String,\n    color: String\n  },\n  data(){\n    return {\n      file: null,\n      showSuccess: false,\n      showFailure: false,\n      showSpam: false,\n      showHam: false\n    }\n  },\n  methods: {\n    clearFiles() {\n      this.$refs.endpoint.reset();\n      this.showFailure = false;\n      this.showSuccess = false;\n      this.showSpam = false;\n      this.showHam = false;\n    },\n    send_files() {\n      let self = this;\n      this.showSpam = false;\n      this.showHam = false;\n\n      let formData = new FormData();\n      formData.append('file', this.file);\n\n      axios.post('http://classification:5002/',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      ).then((resp) => {\n          self.showSuccess = true;\n          console.log(resp.data.class);\n          if (resp.data.class === 'ham') {\n              self.showHam = true;\n          } else {\n              self.showSpam = true;\n          }\n\n      })\n      .catch(function(){\n        self.showFailure = true;\n      });\n\n    }\n  }\n}\n",{"version":3,"sources":["Classify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Classify.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n <h2>Classify your email</h2>\n  <div class=\"row\">\n  <b-col>\n\n    <b-alert variant=\"success\"\n             dismissible\n             :show=\"showSuccess\"\n             @dismissed=\"showSuccess=false\">\n      The upload was successful!\n    </b-alert>\n    <b-alert variant=\"danger\"\n             dismissible\n             :show=\"showFailure\"\n             @dismissed=\"showFailure=false\">\n      The upload has failed!\n    </b-alert>\n    <b-form-file v-model=\"file\"\n                 ref=\"endpoint\"\n                 accept=\"message/rfc822\"\n                 drag-drop type=\"is-dark\"\n                 placeholder=\"Upload file...\"\n                 class=\"float-left my-input\">\n    </b-form-file>\n    <div class=\"float-right\">\n      <b-button @click=\"clearFiles()\" variant=\"outline-danger\" class=\"buttons\">\n        Clear\n      </b-button>\n      <b-button @click=\"send_files()\" variant=\"outline-success\" class=\"buttons\">\n        Classify!\n      </b-button>\n    </div>\n  </b-col>\n  </div>\n  <div class=\"row\">\n    <b-col>\n      <b-card v-if=showSpam\n              border-variant=\"danger\"\n              header=\"SPAM\"\n              header-bg-variant=\"danger\"\n              header-text-variant=\"white\"\n              align=\"center\">\n        <p>The looks like unwanted email. You should discard it!</p>\n      </b-card>\n      <b-card v-if=showHam\n              border-variant=\"success\"\n              header=\"NOT SPAM\"\n              header-bg-variant=\"success\"\n              header-text-variant=\"white\"\n              align=\"center\">\n        <p>This email looks safe.</p>\n      </b-card>\n    </b-col>\n\n\n  </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"TrainFiles\",\n  props: {\n    endpoint: String,\n    color: String\n  },\n  data(){\n    return {\n      file: null,\n      showSuccess: false,\n      showFailure: false,\n      showSpam: false,\n      showHam: false\n    }\n  },\n  methods: {\n    clearFiles() {\n      this.$refs.endpoint.reset();\n      this.showFailure = false;\n      this.showSuccess = false;\n      this.showSpam = false;\n      this.showHam = false;\n    },\n    send_files() {\n      let self = this;\n      this.showSpam = false;\n      this.showHam = false;\n\n      let formData = new FormData();\n      formData.append('file', this.file);\n\n      axios.post('http://classification:5002/',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      ).then((resp) => {\n          self.showSuccess = true;\n          console.log(resp.data.class);\n          if (resp.data.class === 'ham') {\n              self.showHam = true;\n          } else {\n              self.showSpam = true;\n          }\n\n      })\n      .catch(function(){\n        self.showFailure = true;\n      });\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n.buttons {\n  margin: 10px;\n}\n  h1 {\n    margin-bottom: 40px;\n  }\n\n  .my-input {\n    width: 80%;\n    margin-top: 11px;\n  }\n\n  .row {\n    margin-top: 30px;\n  }\n</style>\n"]}]}